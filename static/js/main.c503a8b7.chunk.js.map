{"version":3,"sources":["store/action.js","images/sunny.svg","images/cloudy.svg","images/rain.svg","utils.js","store/reducer.js","Components/IOSSwitch/IOSSwitch.js","hooks/useWindowsize.js","Components/NavBar/NavBar.js","requests/requests.js","Components/Home/SearchBar/SearchBar.js","Components/Home/MainContainer/Dashboard/DashBoard.js","Components/Home/MainContainer/dayCard/DayCard.js","Components/Home/MainContainer/CardSlider/CardSlider.js","Components/Home/MainContainer/MainContainer.js","Components/Home/Home.js","Components/Favorites/FavoriteCard/FavoriteCard.js","Components/Favorites/Favorites.js","App.js","index.js"],"names":["TOGGLE_THEME","UPDATE_CITY","UPDATE_TEMPERATURE","UPDATE_CURRENT","TOGGLE_METRIC","UPDATE_DAYS","UPDATE_KEY","UPDATE_FAVORITES","TOGGLE_FIRST","ACCU_WEATHER_HOST","API_KEY","weekDayConvertor","Array","ID","dt","Date","getTime","replace","c","r","Math","random","floor","toString","containsObject","list","obj","i","length","key","imageDispenser","string","toLowerCase","includes","sunny","rainny","cloudy","makeDayArray","array","map","day","celsius","weekday","getDay","ceil","Temperature","Maximum","Value","fahrenheit","condition","Day","IconPhrase","initialState","first","dark","metric","city","current","days","isFavorite","tempFav","favorites","localStorage","getItem","JSON","parse","lat","lan","reducer","state","action","type","actionTypes","console","log","value","boolKey","utils","boolFav","setItem","stringify","splice","indexOf","IOSSwitch","withStyles","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","useWindowSize","useState","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","NavBar","useSelector","dispatch","useDispatch","style","borderBottom","StyledH1","styled","h1","SwitchCOntainer","div","br","className","FormControlLabel","control","onChange","name","label","ButtonGroup","alignItems","size","to","Button","variant","citySelection","item","notify","a","axios","get","response","data","Metric","Imperial","WeatherText","nextFiveDays","response2","DailyForecasts","getCities","q","temp","AdministrativeArea","LocalizedName","Key","SearchBar","cities","setCities","errorId","toast","error","toastId","requests","SearchContainer","handleInput","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","result","handleChange","onInputChange","options","Dashboard","handleClick","Container","IconContainer","alt","src","location","degrees","marginRight","onClick","DayCard","img","CardSilder","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","cards","MainContainer","deskDayCardArray","index","CardsContainer","windowWidth","Home","exec","path","FavoriteCard","setCel","setFar","setCon","id","getCity","mode","StyleImg","Favorites","card","App","background","exact","component","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c503a8b7.chunk.js","sourcesContent":["export const TOGGLE_THEME = 'TOGGLE_THEME';\nexport const UPDATE_CITY = 'UPDATE_CITY';\nexport const UPDATE_TEMPERATURE = 'UPDATE_TEMPERATURE';\nexport const UPDATE_CURRENT = 'UPDATE_CURRENT';\nexport const TOGGLE_METRIC = 'TOGGLE_METRIC';\nexport const UPDATE_DAYS = 'UPDATE_DAYS';\nexport const UPDATE_KEY = 'UPDATE_KEY';\nexport const UPDATE_FAVORITES = 'UPDATE_FAVORITES';\nexport const TOGGLE_FIRST = 'TOGGLE_FIRST';","export default __webpack_public_path__ + \"static/media/sunny.8ca7a2ad.svg\";","export default __webpack_public_path__ + \"static/media/cloudy.9d434199.svg\";","export default __webpack_public_path__ + \"static/media/rain.9f7db2d0.svg\";","import sunny from './images/sunny.svg';\nimport cloudy from './images/cloudy.svg';\nimport rainny from './images/rain.svg';\n\nexport const ACCU_WEATHER_HOST = 'https://dataservice.accuweather.com';\nexport const API_KEY = 'ALY2AtsDuGp5HjSxZkHRZsfOiWmAtVco';\n// export const API_KEY = 'GU2OTPQUz1mECqPOZOVdshtwt64h4pD5';\n// export const API_KEY = 'OjjecWaBfDrQauHwSlDuGTKjwZLZCXm6';\n// export const API_KEY = 'fzGigpqW5XWJWlLMkw8m4HFusxI3gaQo';\n// export const API_KEY = 'nmMZBObVPEUUAOHrgJXyOAA1XVhtOTP1';\n\nexport const weekDayConvertor = new Array(7);\nweekDayConvertor[0] = \"Sunday\";\nweekDayConvertor[1] = \"Monday\";\nweekDayConvertor[2] = \"Tuesday\";\nweekDayConvertor[3] = \"Wednesday\";\nweekDayConvertor[4] = \"Thursday\";\nweekDayConvertor[5] = \"Friday\";\nweekDayConvertor[6] = \"Saturday\";\n\nexport const debounce = (func, wait, immediate) => {\n\tlet timeout;\n\n\treturn function () {\n\n\t\tlet context = this,\n\t\t\targs = arguments;\n\t\tlet later = function () {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tlet callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};\n\nexport const ID = () => {\n\tvar dt = new Date().getTime();\n\tvar uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t\tvar r = (dt + Math.random() * 16) % 16 | 0;\n\t\tdt = Math.floor(dt / 16);\n\t\treturn (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n\t});\n\treturn uuid;\n}\n\nexport const cToF = (celsius) => {\n\tvar cTemp = celsius;\n\tvar cToFahr = cTemp * 9 / 5 + 32;\n\treturn cToFahr\n}\n\nexport const checkForMatch = (array, obj) => {\n\t// let bool = array.isArray(obj)\n\t// return bool\n}\n\nexport const containsObject = (list, obj) => {\n\tvar i;\n\tfor (i = 0; i < list.length; i++) {\n\t\tif (list[i].key === obj.key) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport const imageDispenser = (string) => {\n\n\ttry {\n\t\tswitch (true) {\n\n\t\t\tcase string.toLowerCase().includes('sun'):\n\t\t\t\treturn sunny\n\t\t\tcase string.toLowerCase().includes('rain'):\n\t\t\t\treturn rainny\n\t\t\tcase string.toLowerCase().includes('clear'):\n\t\t\t\treturn sunny\n\t\t\tdefault:\n\t\t\t\treturn cloudy\n\t\t}\n\t} catch {\n\t\treturn cloudy\n\t}\n\n}\n\nexport const makeDayArray = (array) => {\n    let days = array.map(day => {\n      let weekday = new Date(day.Date)\n      return {\n        weekday: weekDayConvertor[weekday.getDay()],\n        celsius: Math.ceil(day.Temperature.Maximum.Value) ,\n        fahrenheit: cToF(Math.ceil(day.Temperature.Maximum.Value)),\n        condition: day.Day.IconPhrase\n      }\n    });\n    \n    return days\n  }","import * as actionTypes from './action';\nimport * as utils from '../utils'\n\nconst initialState = {\n    first: false,\n    key: null,\n    dark: false,\n    metric: true,\n    city: '',\n    current: null,\n    days: [],\n    celsius: false,\n    isFavorite: false,\n    fahrenheit: false,\n    tempFav: null,\n    favorites: localStorage.getItem('favorites') === null ? [] : JSON.parse(localStorage.getItem('favorites')),\n    lat: null,\n    lan: null\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_THEME:\n            return {\n                ...state,\n                dark: state.dark ? false : true\n            }\n        case actionTypes.UPDATE_CITY:\n            console.log(action.value);\n            return {\n                ...state,\n                city: action.value,\n            }\n        case actionTypes.UPDATE_TEMPERATURE:\n            console.log(action);\n            return {\n                ...state,\n                celsius: action.celsius,\n                fahrenheit: action.fahrenheit\n            }\n        case actionTypes.UPDATE_CURRENT:\n\n            return {\n                ...state,\n                current: action.value\n            }\n        case actionTypes.TOGGLE_METRIC:\n            return {\n                ...state,\n                metric: state.metric ? false : true\n            }\n        case actionTypes.UPDATE_DAYS:\n            return {\n                ...state,\n                days: action.value\n\n            }\n        case actionTypes.UPDATE_KEY:\n            let boolKey = utils.containsObject(state.favorites, { key: action.key, city: action.city });\n            return {\n                ...state,\n                key: action.key,\n                city: action.city,\n                isFavorite: boolKey ? true : false\n\n            }\n        case actionTypes.UPDATE_FAVORITES:\n            let boolFav = utils.containsObject(state.favorites, { key: state.key, city: state.city });\n            let favorites = state.favorites;\n\n            if (!boolFav) {\n                localStorage.setItem('favorites',JSON.stringify([...state.favorites, { key: state.key, city: state.city }]));\n                return {\n                    ...state,\n                    favorites: [...state.favorites, { key: state.key, city: state.city }],\n                    isFavorite: boolFav ? false : true\n                }\n            } else {\n                localStorage.setItem('favorites',JSON.stringify(favorites.splice(favorites.indexOf({ key: state.key, city: state.city }), 1)));\n                return {\n                    ...state,\n                    favorites: favorites.splice(favorites.indexOf({ key: state.key, city: state.city }), 1),\n                    isFavorite: boolFav ? false : true\n                }\n\n            }\n            case actionTypes.TOGGLE_FIRST:\n                return {\n                    ...state,\n                    first: true\n                }\n        default:\n            return state\n    }\n\n\n}\n\nexport default reducer","\nimport { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\n\nconst IOSSwitch = withStyles((theme) => ({\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(2),\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#ffffff',\n          opacity: 1,\n          border: 'none',\n        },\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff',\n      },\n    },\n    thumb: {\n      width: 24,\n      height: 24,\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: `1px solid ${theme.palette.grey[400]}`,\n      backgroundColor: '#242132',\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n  }))(({ classes, ...props }) => {\n    return (\n      <Switch\n        focusVisibleClassName={classes.focusVisible}\n        disableRipple\n        classes={{\n          root: classes.root,\n          switchBase: classes.switchBase,\n          thumb: classes.thumb,\n          track: classes.track,\n          checked: classes.checked,\n        }}\n        {...props}\n      />\n    );\n  });\n  \n  export default IOSSwitch;","import { useState, useEffect } from \"react\";\n\n\nexport default function useWindowSize() {\n\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n\n    function handleResize() {\n\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); \n  return windowSize;\n}","import React from 'react'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport IOSSwitch from '../IOSSwitch/IOSSwitch';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as action from '../../store/action'\nimport useWindowSize from '../../hooks/useWindowsize';\nimport styled from 'styled-components';\n\n\n\n\nexport default function NavBar() {\n  const dark = useSelector(state => state.dark);\n  const dispatch = useDispatch();\n  const windowSize = useWindowSize();\n\n  const handleChange = () => {\n    dispatch({ type: action.TOGGLE_THEME })\n  }\n  const style = {\n    color: dark ? '#ffffff' : '#000000',\n    borderBottom: dark ? 'solid 2px #ffffff' : 'solid 2px #000000'\n  }\n\n\n\n  const StyledH1 = styled.h1`\n  font-size: ${windowSize.width < 900 ? '5vw' : '2vw'};\n  `\n  const SwitchCOntainer = styled.div`\n  display: flex;\n  flex-direction: ${windowSize.width < 900 ? 'column' : 'row'}\n  `\n  const NavBar = styled.div`\n  position: relative;\n  top: 0;\n  width: 100vw;\n  height: 13%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1%;\n  transition: color .3s ease;`\nconst br = windowSize.width < 900 ? <br></br> : '';\n\n  return (\n    <NavBar style={style} className=\"navbar\">\n      <StyledH1>\n        Weather {br} App\n      </StyledH1>\n      <SwitchCOntainer>\n        <FormControlLabel\n          control={<IOSSwitch checked={dark} onChange={handleChange} name=\"checkedB\" label={'dark'} />}\n        />\n        {dark ? 'dark mode' : 'light mode'}\n      </SwitchCOntainer>\n\n      <ButtonGroup style={{alignItems: 'center'}} size=\"lg\" className={windowSize.width < 900 ? \"btn-group-vertical\" : \"mb-2\"}>\n        <Link to=\"/home\"><Button style={{width: '100%'}} variant={dark ? \"outline-light\" : \"outline-dark\"}>Home</Button></Link>\n        <Link to=\"/favorites\"><Button style={{width: '100%'}} variant={dark ? \"outline-light\" : \"outline-dark\"}>Favorites</Button></Link>\n      </ButtonGroup>\n\n    </NavBar>\n  )\n}","import axios from \"axios\";\nimport * as utils from '../utils';\nimport * as action from '../store/action';\n\nexport async function citySelection (item, dispatch, notify) {\n    try {\n        const response = await axios.get(`${utils.ACCU_WEATHER_HOST}/currentconditions/v1/${item.key}?apikey=${utils.API_KEY}&language=en&details=true`)\n        dispatch({ type: action.UPDATE_TEMPERATURE, celsius: response.data[0].Temperature.Metric.Value, fahrenheit: response.data[0].Temperature.Imperial.Value });\n        dispatch({ type: action.UPDATE_CURRENT, value: response.data[0].WeatherText });\n    } catch (error) {\n        console.log(error);\n        notify();\n    }\n\n}\n\nexport async function nextFiveDays(item, dispatch, notify) {\n    try {\n        const response2 = await axios.get(`${utils.ACCU_WEATHER_HOST}/forecasts/v1/daily/5day/${item.key}?apikey=${utils.API_KEY}&language=en&details=true&metric=true`)\n        console.log(response2);\n        dispatch({ type: action.UPDATE_DAYS, value: utils.makeDayArray(response2.data.DailyForecasts) })\n    } catch (error) {\n        notify()\n        console.log(error);\n    }\n}\n\nexport async function getCities(q, notify) {\n    if (q === '' || q === null) {\n        return []\n    }\n    try {\n        const response = await axios.get(`${utils.ACCU_WEATHER_HOST}/locations/v1/cities/autocomplete?apikey=${utils.API_KEY}&q=${q}&language=en`);\n        let temp = response.data.map(\n            item => {\n                return { value: item.AdministrativeArea.LocalizedName, label: item.AdministrativeArea.LocalizedName, key: item.Key }\n            }\n        )\n        return temp\n    } catch {\n        notify()\n    }\n \n\n}","import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport {useDispatch, useSelector } from 'react-redux';\nimport * as action from '../../../store/action';\nimport * as utils from '../../../utils';\nimport { ToastContainer, toast } from 'react-toastify';\nimport * as requests from '../../../requests/requests'\nimport styled from 'styled-components';\n\nexport default function SearchBar() {\n  const dispatch = useDispatch();\n  const first = useSelector(state => state.first);\n  const initialValue = []\n  const [cities, setCities] = useState(initialValue);\n  const errorId = utils.ID();\n\n\n  const notify = () => toast.error(\"Network Error\", {\n    toastId: errorId\n  });\n\n  useEffect(()=>{\n    \n    if (!first) {\n      dispatch({ type: action.UPDATE_KEY, key: '215854', city: 'Tel Aviv' });\n      requests.citySelection({key: '215854', value: 'Tel Aviv'},dispatch,notify);\n      requests.nextFiveDays({key: '215854', value: 'Tel Aviv'},dispatch,notify);\n      dispatch({type: action.TOGGLE_FIRST})\n    }\n  },[]);\n  \n  const SearchContainer = styled.div`\n  width: 30%;\n  height: 5%;\n  background: transparent;\n  height: 3.5vw;\n  `\n  const handleInput = utils.debounce( async (q) => {\n    try {\n      let result = await requests.getCities(q);\n      setCities(result);\n    } catch {\n      notify()\n    }\n\n\n  },500)\n\n\n  const handleChange = async (item) => {\n    dispatch({ type: action.UPDATE_KEY, key: item.key, city: item.value });\n    requests.citySelection(item,dispatch,notify);\n    requests.nextFiveDays(item,dispatch,notify);\n  }\n\n  return (\n    <SearchContainer >\n    <Select\n      onChange={handleChange}\n      onInputChange={handleInput}\n      options={cities} />\n    <ToastContainer />\n    </SearchContainer >\n\n  );\n}\n\n","import React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport IOSSwitch from '../../../IOSSwitch/IOSSwitch';\nimport * as action from '../../../../store/action';\nimport * as Icon from 'react-bootstrap-icons';\nimport * as utils from '../../../../utils';\nimport styled from 'styled-components';\nimport useWindowSize from '../../../../hooks/useWindowsize';\n\nexport default function Dashboard(props) {\n  const dispatch = useDispatch();\n  const isFavorite = useSelector(state => state.isFavorite);\n  const windowSize = useWindowSize();\n\n  const handleChange = () => {\n    dispatch({ type: action.TOGGLE_METRIC })\n  }\n  const handleClick = () => {\n    dispatch({ type: action.UPDATE_FAVORITES })\n  }\n\n\n  const SwitchCOntainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  `\n  const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  align-content: center;\n  width: 100%;\n  `\n  const IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: ${windowSize.width < 900 ? 'center' : 'flex-end'};\n  `\n\n  return (\n    <Container >\n      <div className=\"weather-widget\">\n        <img alt=\"weather_img\" src={utils.imageDispenser(props.current)}>\n        </img>\n        <div style={{ color: props.dark ? '#ffffff' : '#000000' }}>\n          <p>{props.location}</p>\n          <p>{props.degrees}</p>\n\n        </div>\n      </div>\n      <SwitchCOntainer>\n        <FormControlLabel\n          style={{marginRight: 'unset'}}control={<IOSSwitch checked={props.metric} name=\"checkedB\" onChange={handleChange} label={'dark'} />}\n        />\n          <h3>{props.metric ? 'Celcius' : 'Fahrenheit'}</h3>\n      </SwitchCOntainer>\n      <IconContainer>\n      {\n          isFavorite ? <Icon.HeartFill onClick={() => handleClick()} className=\"favorites-icon\" style={{ color: '#fe0000' }} /> : <Icon.Heart onClick={() => handleClick()} className=\"favorites-icon\" style={{ color: props.dark ? '#ffffff' : '#000000', }} />\n        }\n      </IconContainer>\n\n\n\n      </Container >\n      )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as utils from '../../../../utils';\nimport styled from 'styled-components';\nimport useWindowSize from '../../../../hooks/useWindowsize';\n\nexport default function DayCard(props) {\n    const metric = useSelector(state => state.metric);\n    const windowSize = useWindowSize();\n\n    const DayCard = styled.div`\n    width: ${windowSize.width < 900 ? '75%' : '15%'};\n    height: ${windowSize.width < 900 ? '50vw' : '90%'};\n    border: solid 2px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    margin: auto;\n    `\n\n    const StyledH1 = styled.h1`\n    font-size: ${windowSize.width < 900 ? '5vw' : '1vw'};\n    `\n\n    const StyledImg = styled.img`\n    object-fit: contain;\n    height: 40%;\n    `\n    return (\n        <DayCard className=\"day-card\">\n            <StyledH1>{props.day}</StyledH1>\n            <img src={utils.imageDispenser(props.condition)} alt=\"weather_image\"/>\n            <StyledH1>{metric ? `${props.celsius}°c` : `${props.fahrenheit}°F`}</StyledH1>\n        </DayCard>\n    )\n}","\nimport React from \"react\";\nimport Slider from \"react-slick\";\nimport 'slick-carousel/slick/slick-theme.css';\nimport 'slick-carousel/slick/slick.css';\nexport default function CardSilder(props) {\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true,\n        speed: 2000,\n        autoplaySpeed: 2000,\n        cssEase: \"ease-in-out\"\n      };\n    return (\n        <div style={{width: '80%', height: '50%'}}>\n            <Slider  {...settings}>\n\n                    {props.cards}\n\n            </Slider>\n        </div>\n    )\n} ","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Dashboard from './Dashboard/DashBoard';\nimport DayCard from './dayCard/DayCard';\nimport styled from 'styled-components';\nimport useWindowSize from '../../../hooks/useWindowsize';\nimport CardSilder from './CardSlider/CardSlider';\n\nexport default function MainContainer() {\n    const dark = useSelector(state => state.dark);\n    const location = useSelector(state => state.city);\n    const celsius = useSelector(state => state.celsius);\n    const fahrenheit = useSelector(state => state.fahrenheit);\n    const metric = useSelector(state => state.metric);\n    const current = useSelector(state => state.current);\n    const days = useSelector(state => state.days);\n    const key = useSelector(state => state.key);\n    const windowSize = useWindowSize();\n\n    const deskDayCardArray = days.map((day,index) => <DayCard key={`card_${index}`} day={day.weekday} celsius={day.celsius} fahrenheit={day.fahrenheit} condition={day.condition}/>);\n    \n    const Container = styled.div`\n    background: ${dark ? '#2D2C41': 'rgba(255, 255, 255, 0.2)'};\n    color: ${dark ? '#ffffff' : '#000000'};\n    width: ${windowSize.width < 900 ? '95%' : '70%'};\n    height: 70%;\n    margin-bottom: 7%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    `\n    const CardsContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    height: 45%;\n    align-items: flex-start;\n    `\n    return (\n        <Container className='main-container'>\n            <Dashboard \n            location={location}\n            degrees={metric ? `${celsius}°c`:`${fahrenheit}°F`}\n            dark={dark}\n            metric={metric}\n            key={key}\n            current={current}\n            />\n            <h1>{current}</h1>\n            {\n                windowSize.width < 900 ?\n                <CardSilder\n                windowWidth={windowSize.width}\n                cards={deskDayCardArray}\n                 /> :\n                 <CardsContainer >\n                 {deskDayCardArray}\n             </CardsContainer>\n            }\n\n\n        </Container >\n    )\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport SearchBar from './SearchBar/SearchBar';\nimport MainContainer from './MainContainer/MainContainer';\nimport './home.css'\nimport styled from 'styled-components';\n\n\nexport default function Home() {\n    const Container = styled.div`\n    width: 100%;\n    height: 89%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    padding: 1%;\n    position: relative;\n    `\n    return (\n        <Route exec path=\"/\" >\n        <Container>\n            <SearchBar />\n            <MainContainer />\n        </Container>\n        </Route>\n    )\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as utils from '../../../utils';\nimport * as requests from '../../../requests/requests'\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\nimport * as action from '../../../store/action';\nimport styled from 'styled-components';\nimport useWindowSize from '../../../hooks/useWindowsize';\n\nexport default function FavoriteCard(props) {\n    const dispatch = useDispatch();\n    const windowSize = useWindowSize();\n\n    const metric = useSelector(state => state.metric);\n    const [celsius, setCel] = useState('');\n    const [fahrenheit, setFar] = useState('');\n    const [condition, setCon] = useState('');\n    const errorId = utils.ID();\n\n\n    const notify = () => toast.error(\"Network Error\", {\n        toastId: errorId\n    });\n\n    async function getCity() {\n        try {\n            const response = await axios.get(`${utils.ACCU_WEATHER_HOST}/currentconditions/v1/${props.id}?apikey=${utils.API_KEY}&language=en&details=true`);\n            setCel(response.data[0].Temperature.Metric.Value);\n            setFar(response.data[0].Temperature.Imperial.Value);\n            setCon(response.data[0].WeatherText);\n        } catch {\n\n        }\n\n    }\n\n    const handleClick = () => {\n        dispatch({ type: action.UPDATE_KEY, key: props.id, city: props.city });\n        requests.citySelection({ key: props.id, value: props.city }, dispatch, notify);\n        requests.nextFiveDays({key: props.id, value: props.city},dispatch,notify);\n    }\n    getCity();\n\n    const Container = styled.div`\n    height: 35%;\n    width: 90%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    background: ${props.mode ? '#2D2C41' : 'rgba(255, 255, 255, 0.2)'};\n    color: ${props.mode ? '#ffffff' : '#000000'};\n    `\n\n    const StyledH1 = styled.h1`\n    font-size:  ${windowSize.width < 900 ? '5vw': '1.7vw'};\n    text-decoration: none;\n    `\n\n    const StyleImg = styled.img`\n    height: 40%;\n    object-fit: contain;\n    `\n    return (\n        <Link to=\"/home\">\n            <Container onClick={() => handleClick()}>\n                <StyledH1> {props.city}<br></br> {metric ? `${celsius}°c` : `${fahrenheit}°f`}</StyledH1>\n                <StyledH1> {condition} </StyledH1> \n                <StyleImg src={utils.imageDispenser(condition)} alt=\"weather_image\" />\n                <ToastContainer />\n            </Container>\n        </Link>\n\n    )\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport FavoriteCard from './FavoriteCard/FavoriteCard';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport useWindowSize from '../../hooks/useWindowsize';\n\nexport default function Favorites() {\n    const dark = useSelector(state => state.dark);\n    const favorites = useSelector(state => state.favorites);\n    const windowSize = useWindowSize();\n\n    const cards = favorites.map(card => \n            <FavoriteCard city={card.city} id={card.key}/>\n    )\n\n    const Container = styled.div`\n    height: 90%;\n    width: 90%;\n    display: grid;\n    grid-template-columns: ${windowSize.width < 900 ? '1fr 1fr' : '1fr 1fr 1fr 1fr 1fr'};\n    grid-row-gap: 5%;\n    grid-column-gap: 5%;\n    margin-top: 1vw;\n    `\n\n    return (\n        <Route exec path=\"/favorites\" >\n        <Container mode={dark} className=\"favorites\">\n            {cards}\n        </Container>\n        </Route>\n\n    )\n}","\nimport './App.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport Home from './Components/Home/Home';\nimport Favorites from './Components/Favorites/Favorites';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n  const dark = useSelector(state => state.dark);\n  const style = {\n    background: dark ? '#242132' : 'linear-gradient(250.26deg, #75489A -9.91%, rgba(80, 195, 210, 0.47) 57.79%, rgba(117, 72, 154, 0.4) 110.89%)'\n  }\n  \n  return (\n    <BrowserRouter>\n      <div className=\"App\" style={style}>\n        <NavBar />\n        <Route exact path=\"/weather-app\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/favorites\" component={Favorites} />\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore} from 'redux';\nimport { Provider} from 'react-redux';\nimport reducer from './store/reducer'\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}