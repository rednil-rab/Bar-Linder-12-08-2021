{"version":3,"sources":["store/action.js","images/sunny.svg","images/cloudy.svg","images/rain.svg","utils.js","store/reducer.js","Components/NavBar/NavBar.js","requests/requests.js","Components/Home/SearchBar/SearchBar.js","Components/Home/MainContainer/Dashboard/DashBoard.js","Components/Home/MainContainer/dayCard/DayCard.js","Components/Home/MainContainer/MainContainer.js","Components/Home/Home.js","Components/Favorites/FavoriteCard/FavoriteCard.js","Components/Favorites/Favorites.js","App.js","index.js"],"names":["TOGGLE_THEME","UPDATE_CITY","UPDATE_TEMPERATURE","UPDATE_CURRENT","TOGGLE_METRIC","UPDATE_DAYS","UPDATE_KEY","UPDATE_FAVORITES","TOGGLE_FIRST","ACCU_WEATHER_HOST","API_KEY","weekDayConvertor","Array","ID","dt","Date","getTime","replace","c","r","Math","random","floor","toString","containsObject","list","obj","i","length","key","imageDispenser","string","toLowerCase","includes","sunny","rainny","cloudy","makeDayArray","array","map","day","celsius","weekday","getDay","ceil","Temperature","Maximum","Value","fahrenheit","condition","Day","IconPhrase","initialState","first","dark","metric","city","current","days","isFavorite","tempFav","favorites","localStorage","getItem","JSON","parse","lat","lan","reducer","state","action","type","actionTypes","console","log","value","boolKey","utils","boolFav","setItem","stringify","splice","indexOf","IOSSwitch","withStyles","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","NavBar","useSelector","dispatch","useDispatch","style","borderBottom","className","FormControlLabel","control","onChange","name","label","ButtonGroup","size","to","Button","variant","citySelection","item","notify","a","axios","get","response","data","Metric","Imperial","WeatherText","response2","DailyForecasts","getCities","q","temp","AdministrativeArea","LocalizedName","Key","SearchBar","useState","cities","setCities","errorId","toast","error","toastId","useEffect","requests","handleInput","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","result","handleChange","onInputChange","onKeyDown","event","e","window","keyCode","which","options","Dashboard","handleClick","alt","src","location","degrees","onClick","DayCard","MainContainer","dayCardArray","index","background","Home","exec","path","FavoriteCard","setCel","setFar","setCon","id","getCity","Favorites","cards","card","App","exact","component","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e522dcf6.chunk.js","sourcesContent":["export const TOGGLE_THEME = 'TOGGLE_THEME';\r\nexport const UPDATE_CITY = 'UPDATE_CITY';\r\nexport const UPDATE_TEMPERATURE = 'UPDATE_TEMPERATURE';\r\nexport const UPDATE_CURRENT = 'UPDATE_CURRENT';\r\nexport const TOGGLE_METRIC = 'TOGGLE_METRIC';\r\nexport const UPDATE_DAYS = 'UPDATE_DAYS';\r\nexport const UPDATE_KEY = 'UPDATE_KEY';\r\nexport const UPDATE_FAVORITES = 'UPDATE_FAVORITES';\r\nexport const TOGGLE_FIRST = 'TOGGLE_FIRST';","export default __webpack_public_path__ + \"static/media/sunny.cf98dcc9.svg\";","export default __webpack_public_path__ + \"static/media/cloudy.9d434199.svg\";","export default __webpack_public_path__ + \"static/media/rain.ec9a02b0.svg\";","import sunny from './images/sunny.svg';\nimport cloudy from './images/cloudy.svg';\nimport rainny from './images/rain.svg';\n\nexport const ACCU_WEATHER_HOST = 'https://dataservice.accuweather.com';\n// export const API_KEY = 'ALY2AtsDuGp5HjSxZkHRZsfOiWmAtVco';\n// export const API_KEY = 'GU2OTPQUz1mECqPOZOVdshtwt64h4pD5';\n// export const API_KEY = 'OjjecWaBfDrQauHwSlDuGTKjwZLZCXm6';\n// export const API_KEY = 'fzGigpqW5XWJWlLMkw8m4HFusxI3gaQo';\nexport const API_KEY = 'nmMZBObVPEUUAOHrgJXyOAA1XVhtOTP1';\n\nexport const weekDayConvertor = new Array(7);\nweekDayConvertor[0] = \"Sunday\";\nweekDayConvertor[1] = \"Monday\";\nweekDayConvertor[2] = \"Tuesday\";\nweekDayConvertor[3] = \"Wednesday\";\nweekDayConvertor[4] = \"Thursday\";\nweekDayConvertor[5] = \"Friday\";\nweekDayConvertor[6] = \"Saturday\";\n\nexport const debounce = (func, wait, immediate) => {\n\tlet timeout;\n\n\treturn function () {\n\n\t\tlet context = this,\n\t\t\targs = arguments;\n\t\tlet later = function () {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tlet callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};\n\nexport const ID = () => {\n\tvar dt = new Date().getTime();\n\tvar uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t\tvar r = (dt + Math.random() * 16) % 16 | 0;\n\t\tdt = Math.floor(dt / 16);\n\t\treturn (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n\t});\n\treturn uuid;\n}\n\nexport const cToF = (celsius) => {\n\tvar cTemp = celsius;\n\tvar cToFahr = cTemp * 9 / 5 + 32;\n\treturn cToFahr\n}\n\nexport const checkForMatch = (array, obj) => {\n\t// let bool = array.isArray(obj)\n\t// return bool\n}\n\nexport const containsObject = (list, obj) => {\n\tvar i;\n\tfor (i = 0; i < list.length; i++) {\n\t\tif (list[i].key === obj.key) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport const imageDispenser = (string) => {\n\n\ttry {\n\t\tswitch (true) {\n\n\t\t\tcase string.toLowerCase().includes('sun'):\n\t\t\t\treturn sunny\n\t\t\tcase string.toLowerCase().includes('rain'):\n\t\t\t\treturn rainny\n\t\t\tcase string.toLowerCase().includes('clear'):\n\t\t\t\treturn sunny\n\t\t\tdefault:\n\t\t\t\treturn cloudy\n\t\t}\n\t} catch {\n\t\treturn cloudy\n\t}\n\n}\n\nexport const makeDayArray = (array) => {\n    let days = array.map(day => {\n      let weekday = new Date(day.Date)\n      return {\n        weekday: weekDayConvertor[weekday.getDay()],\n        celsius: Math.ceil(day.Temperature.Maximum.Value) ,\n        fahrenheit: cToF(Math.ceil(day.Temperature.Maximum.Value)),\n        condition: day.Day.IconPhrase\n      }\n    });\n    \n    return days\n  }","import * as actionTypes from './action';\nimport * as utils from '../utils'\n\nconst initialState = {\n    first: false,\n    key: null,\n    dark: false,\n    metric: true,\n    city: '',\n    current: null,\n    days: [],\n    celsius: false,\n    isFavorite: false,\n    fahrenheit: false,\n    tempFav: null,\n    favorites: localStorage.getItem('favorites') === null ? [] : JSON.parse(localStorage.getItem('favorites')),\n    lat: null,\n    lan: null\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_THEME:\n            return {\n                ...state,\n                dark: state.dark ? false : true\n            }\n        case actionTypes.UPDATE_CITY:\n            console.log(action.value);\n            return {\n                ...state,\n                city: action.value,\n            }\n        case actionTypes.UPDATE_TEMPERATURE:\n            console.log(action);\n            return {\n                ...state,\n                celsius: action.celsius,\n                fahrenheit: action.fahrenheit\n            }\n        case actionTypes.UPDATE_CURRENT:\n\n            return {\n                ...state,\n                current: action.value\n            }\n        case actionTypes.TOGGLE_METRIC:\n            return {\n                ...state,\n                metric: state.metric ? false : true\n            }\n        case actionTypes.UPDATE_DAYS:\n            return {\n                ...state,\n                days: action.value\n\n            }\n        case actionTypes.UPDATE_KEY:\n            let boolKey = utils.containsObject(state.favorites, { key: action.key, city: action.city });\n            return {\n                ...state,\n                key: action.key,\n                city: action.city,\n                isFavorite: boolKey ? true : false\n\n            }\n        case actionTypes.UPDATE_FAVORITES:\n            let boolFav = utils.containsObject(state.favorites, { key: state.key, city: state.city });\n            let favorites = state.favorites;\n\n            if (!boolFav) {\n                localStorage.setItem('favorites',JSON.stringify([...state.favorites, { key: state.key, city: state.city }]));\n                return {\n                    ...state,\n                    favorites: [...state.favorites, { key: state.key, city: state.city }],\n                    isFavorite: boolFav ? false : true\n                }\n            } else {\n                localStorage.setItem('favorites',JSON.stringify(favorites.splice(favorites.indexOf({ key: state.key, city: state.city }), 1)));\n                return {\n                    ...state,\n                    favorites: favorites.splice(favorites.indexOf({ key: state.key, city: state.city }), 1),\n                    isFavorite: boolFav ? false : true\n                }\n\n            }\n            case actionTypes.TOGGLE_FIRST:\n                return {\n                    ...state,\n                    first: true\n                }\n        default:\n            return state\n    }\n\n\n}\n\nexport default reducer","import React from 'react'\nimport './navbar.css';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as action from '../../store/action'\n\n\n\nconst IOSSwitch = withStyles((theme) => ({\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1),\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#ffffff',\n          opacity: 1,\n          border: 'none',\n        },\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff',\n      },\n    },\n    thumb: {\n      width: 24,\n      height: 24,\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: `1px solid ${theme.palette.grey[400]}`,\n      backgroundColor: '#242132',\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n  }))(({ classes, ...props }) => {\n    return (\n      <Switch\n        focusVisibleClassName={classes.focusVisible}\n        disableRipple\n        classes={{\n          root: classes.root,\n          switchBase: classes.switchBase,\n          thumb: classes.thumb,\n          track: classes.track,\n          checked: classes.checked,\n        }}\n        {...props}\n      />\n    );\n  });\n\n\n\n\nexport default function NavBar() {\n    const dark = useSelector(state => state.dark);\n    const dispatch = useDispatch();\n\n    const handleChange = () => {\n        dispatch({type: action.TOGGLE_THEME})\n    }\n    const style = {\n        color: dark ? '#ffffff' : '#000000',\n        borderBottom: dark ? 'solid 2px #ffffff' : 'solid 2px #000000'\n    }\n    return (\n        <div style={style} className=\"navbar\">\n            <h1>\n                Herolo <span>(is now abra)</span><br></br> Weather App\n            </h1><div>\n            <FormControlLabel\n        control={<IOSSwitch checked={dark} onChange={handleChange} name=\"checkedB\" label={'dark'}/>}\n      />\n      {dark ? 'dark mode':'light mode'}\n            </div>\n\n            <ButtonGroup size=\"lg\" className=\"mb-2\">\n                <Link to=\"/home\"><Button variant={dark ?  \"outline-light\" : \"outline-dark\"}>Home</Button></Link>\n                <Link to=\"/favorites\"><Button variant={dark ?  \"outline-light\" : \"outline-dark\"}>Favorites</Button></Link>\n            </ButtonGroup>\n\n        </div>\n    )\n}","import axios from \"axios\";\r\nimport * as utils from '../utils';\r\nimport * as action from '../store/action';\r\n\r\nexport async function citySelection (item, dispatch, notify) {\r\n    dispatch({ type: action.UPDATE_KEY, key: item.key, city: item.value });\r\n    console.log(item.key);\r\n\r\n    try {\r\n        const response = await axios.get(`${utils.ACCU_WEATHER_HOST}/currentconditions/v1/${item.key}?apikey=${utils.API_KEY}&language=en&details=true`)\r\n        dispatch({ type: action.UPDATE_TEMPERATURE, celsius: response.data[0].Temperature.Metric.Value, fahrenheit: response.data[0].Temperature.Imperial.Value });\r\n        dispatch({ type: action.UPDATE_CURRENT, value: response.data[0].WeatherText });\r\n    } catch (error) {\r\n        console.log(error);\r\n        notify();\r\n    }\r\n\r\n    try {\r\n        const response2 = await axios.get(`${utils.ACCU_WEATHER_HOST}/forecasts/v1/daily/5day/${item.key}?apikey=${utils.API_KEY}&language=en&details=true&metric=true`)\r\n        console.log(response2);\r\n        dispatch({ type: action.UPDATE_DAYS, value: utils.makeDayArray(response2.data.DailyForecasts) })\r\n    } catch (error) {\r\n        notify()\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport async function getCities(q, notify) {\r\n    if (q === '' || q === null) {\r\n        return []\r\n    }\r\n    const response = await axios.get(`${utils.ACCU_WEATHER_HOST}/locations/v1/cities/autocomplete?apikey=${utils.API_KEY}&q=${q}&language=en`);\r\n    let temp = response.data.map(\r\n        item => {\r\n            return { value: item.AdministrativeArea.LocalizedName, label: item.AdministrativeArea.LocalizedName, key: item.Key }\r\n        }\r\n    )\r\n    return temp\r\n\r\n}","import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport {useDispatch, useSelector } from 'react-redux';\nimport * as action from '../../../store/action';\nimport * as utils from '../../../utils';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport * as requests from '../../../requests/requests'\n\n\nexport default function SearchBar() {\n  const dispatch = useDispatch();\n  const first = useSelector(state => state.first);\n  const initialValue = []\n  const [cities, setCities] = useState(initialValue);\n  const errorId = utils.ID();\n\n\n  const notify = () => toast.error(\"Network Error\", {\n    toastId: errorId\n  });\n\n  useEffect(()=>{\n    \n    if (!first) {\n      requests.citySelection({key: '215854', value: 'Tel Aviv'},dispatch,notify)\n      dispatch({type: action.TOGGLE_FIRST})\n    }\n  },[]);\n  \n\n\n\n\n\n\n  function  suppressNonEng(e)\n  {\n    let key;\n    if(window.event)  key = window.event.keyCode;     //IE\n    else  key = e.which;     //firefox\n\n\n    if(key >128)  return false;\n    else  return true;\n  }\n\n  const handleInput = utils.debounce( async (q) => {\n    try {\n      let result = await requests.getCities(q);\n      setCities(result);\n    } catch {\n      notify()\n    }\n\n\n  },500)\n\n\n  const handleChange = async (item) => {\n    requests.citySelection(item,dispatch,notify);\n  }\n\n  return (\n    <div className=\"search-bar\">\n    <Select\n      onChange={handleChange}\n      onInputChange={handleInput}\n      onKeyDown={(event)=> suppressNonEng(event)}\n      options={cities} />\n    <ToastContainer />\n    </div>\n\n  );\n}\n\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as action from '../../../../store/action';\nimport * as Icon from 'react-bootstrap-icons';\nimport * as utils from '../../../../utils';\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#242132',\n        opacity: 1,\n        border: `1px solid ${theme.palette.grey[400]}`,\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: '#242132',\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\n\nexport default function Dashboard(props) {\n  const dispatch = useDispatch();\n  const isFavorite = useSelector(state => state.isFavorite);\n\n  const handleChange = () => {\n    dispatch({ type: action.TOGGLE_METRIC })\n  }\n  const handleClick = () => {\n    dispatch({ type: action.UPDATE_FAVORITES })\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"weather-widget\">\n        <img alt=\"weather_img\" src={utils.imageDispenser(props.current)}>\n        </img>\n        <div style={{ color: props.dark ? '#ffffff' : '#000000' }}>\n          <p>{props.location}</p>\n          <p>{props.degrees}</p>\n\n        </div>\n      </div>\n      <div >\n        <FormControlLabel\n          control={<IOSSwitch checked={props.metric} name=\"checkedB\" onChange={handleChange} label={'dark'} />}\n\n        />\n          <h3>{props.metric ? 'Celcius' : 'Fahrenheit'}</h3>\n      </div>\n\n\n        {\n          isFavorite ? <Icon.HeartFill onClick={() => handleClick()} className=\"favorites-icon\" style={{ color: '#fe0000' }} /> : <Icon.Heart onClick={() => handleClick()} className=\"favorites-icon\" style={{ color: props.dark ? '#ffffff' : '#000000' }} />\n        }\n\n\n      </div>\n      )\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as utils from '../../../../utils'\r\n\r\nexport default function DayCard(props) {\r\n    const metric = useSelector(state => state.metric);\r\n    return (\r\n        <div className=\"day-card\">\r\n            <h1>{props.day}</h1>\r\n            <img src={utils.imageDispenser(props.condition)} alt=\"weather_image\"/>\r\n            <h2>{metric ? `${props.celsius}°c` : `${props.fahrenheit}°F`}</h2>\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Dashboard from './Dashboard/DashBoard'\nimport DayCard from './dayCard/DayCard'\n\nexport default function MainContainer() {\n    const dark = useSelector(state => state.dark);\n    const location = useSelector(state => state.city);\n    const celsius = useSelector(state => state.celsius);\n    const fahrenheit = useSelector(state => state.fahrenheit);\n    const metric = useSelector(state => state.metric);\n    const current = useSelector(state => state.current);\n    const days = useSelector(state => state.days);\n    const key = useSelector(state => state.key);\n\n    const dayCardArray = days.map((day,index) => <DayCard key={`card_${index}`} day={day.weekday} celsius={day.celsius} fahrenheit={day.fahrenheit} condition={day.condition}/>);\n    return (\n        <div style={{background: dark ? '#2D2C41': 'rgba(255, 255, 255, 0.2)', color: dark ? '#ffffff' : '#000000',}} className='main-container'>\n            <Dashboard \n            location={location}\n            degrees={metric ? `${celsius}°c`:`${fahrenheit}°F`}\n            dark={dark}\n            metric={metric}\n            key={key}\n            current={current}\n            />\n            <h1>{current}</h1>\n            <div className=\"forecast-div\">\n                {dayCardArray}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport SearchBar from './SearchBar/SearchBar';\nimport MainContainer from './MainContainer/MainContainer';\nimport './home.css'\n\n\n\nexport default function Home() {\n    return (\n        <Route exec path=\"/\" >\n        <div className='home'>\n            <SearchBar />\n            <MainContainer />\n        </div>\n        </Route>\n    )\n}","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as utils from '../../../utils';\r\nimport * as requests from '../../../requests/requests'\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function FavoriteCard(props) {\r\n    const dispatch = useDispatch();\r\n    const dark = useSelector(state => state.dark);\r\n    const metric = useSelector(state => state.metric);\r\n    const [celsius, setCel] = useState('');\r\n    const [fahrenheit, setFar] = useState('');\r\n    const [condition, setCon] = useState('');\r\n    const errorId = utils.ID();\r\n\r\n\r\n    const notify = () => toast.error(\"Network Error\", {\r\n        toastId: errorId\r\n    });\r\n\r\n    async function getCity() {\r\n        try {\r\n            const response = await axios.get(`${utils.ACCU_WEATHER_HOST}/currentconditions/v1/${props.id}?apikey=${utils.API_KEY}&language=en&details=true`);\r\n            setCel(response.data[0].Temperature.Metric.Value);\r\n            setFar(response.data[0].Temperature.Imperial.Value);\r\n            setCon(response.data[0].WeatherText);\r\n        } catch {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleClick = () => {\r\n        requests.citySelection({ key: props.id, value: props.city }, dispatch, notify)\r\n    }\r\n    getCity();\r\n    return (\r\n        <Link to=\"/home\">\r\n            <div onClick={() => handleClick()} style={{ background: dark ? '#2D2C41' : 'rgba(255, 255, 255, 0.2)', color: dark ? '#ffffff' : '#000000', }} className=\"favorite-card\" >\r\n                <h1> {props.city}<br></br> {metric ? `${celsius}°c` : `${fahrenheit}°f`}</h1>\r\n                <h2> {condition} </h2> <img src={utils.imageDispenser(condition)} alt=\"weather_image\" />\r\n                <ToastContainer />\r\n            </div>\r\n        </Link>\r\n\r\n    )\r\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport FavoriteCard from './FavoriteCard/FavoriteCard';\nimport './favorites.css'\nimport { useSelector } from 'react-redux';\n\n\nexport default function Favorites() {\n    const favorites = useSelector(state => state.favorites);\n\n    const cards = favorites.map(card => \n            <FavoriteCard city={card.city} id={card.key}/>\n    )\n\n    return (\n        <Route exec path=\"/favorites\" >\n        <div className=\"favorites\">\n            {cards}\n        </div>\n        </Route>\n\n    )\n}","\nimport './App.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport Home from './Components/Home/Home';\nimport Favorites from './Components/Favorites/Favorites';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n  const dark = useSelector(state => state.dark);\n  const style = {\n    background: dark ? '#242132' : 'linear-gradient(250.26deg, #75489A -9.91%, rgba(80, 195, 210, 0.47) 57.79%, rgba(117, 72, 154, 0.4) 110.89%)'\n  }\n  return (\n    <BrowserRouter>\n      <div className=\"App\" style={style}>\n        <NavBar />\n        <Route exact path=\"/Bar-Linder-12-08-2021\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/favorites\" component={Favorites} />\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore} from 'redux';\nimport { Provider} from 'react-redux';\nimport reducer from './store/reducer'\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}