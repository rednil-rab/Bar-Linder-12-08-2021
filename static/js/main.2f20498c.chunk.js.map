{"version":3,"sources":["store/action.js","images/sunny.svg","images/cloudy.svg","images/rain.svg","utils.js","store/reducer.js","Components/NavBar/NavBar.js","Components/Home/SearchBar/SearchBar.js","Components/Home/MainContainer/Dashboard/DashBoard.js","Components/Home/MainContainer/dayCard/DayCard.js","Components/Home/MainContainer/MainContainer.js","Components/Home/Home.js","Components/Favorites/FavoriteCard/FavoriteCard.js","Components/Favorites/Favorites.js","App.js","index.js"],"names":["TOGGLE_THEME","UPDATE_CITY","UPDATE_TEMPERATURE","UPDATE_CURRENT","TOGGLE_METRIC","UPDATE_DAYS","UPDATE_KEY","UPDATE_FAVORITES","ACCU_WEATHER_HOST","API_KEY","weekDayConvertor","Array","containsObject","list","obj","i","length","key","imageDispenser","string","toLowerCase","includes","sunny","rainny","cloudy","initialState","dark","metric","city","current","days","celsius","isFavorite","fahrenheit","tempFav","favorites","localStorage","getItem","JSON","parse","lat","lan","reducer","state","action","type","actionTypes","console","log","value","boolKey","utils","boolFav","setItem","stringify","splice","indexOf","IOSSwitch","withStyles","theme","root","width","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","grey","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","NavBar","useSelector","dispatch","useDispatch","style","borderBottom","className","FormControlLabel","control","onChange","name","label","ButtonGroup","size","to","Button","variant","SearchBar","useState","cities","setCities","errorId","dt","Date","getTime","replace","c","r","Math","random","floor","toString","notify","toast","error","toastId","useEffect","citySelection","item","a","axios","get","response","data","Temperature","Metric","Value","Imperial","WeatherText","response2","array","DailyForecasts","map","day","weekday","getDay","ceil","Maximum","condition","Day","IconPhrase","handleInput","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","q","fetch","then","res","json","temp","AdministrativeArea","LocalizedName","Key","catch","getCities","handleChange","onInputChange","options","Dashboard","handleClick","alt","src","location","degrees","onClick","DayCard","MainContainer","dayCardArray","index","background","Home","exec","path","FavoriteCard","setCel","setFar","setCon","id","getCity","Favorites","cards","card","App","exact","component","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f20498c.chunk.js","sourcesContent":["export const TOGGLE_THEME = 'TOGGLE_THEME';\r\nexport const UPDATE_CITY = 'UPDATE_CITY';\r\nexport const UPDATE_TEMPERATURE = 'UPDATE_TEMPERATURE';\r\nexport const UPDATE_CURRENT = 'UPDATE_CURRENT';\r\nexport const TOGGLE_METRIC = 'TOGGLE_METRIC';\r\nexport const UPDATE_DAYS = 'UPDATE_DAYS';\r\nexport const UPDATE_KEY = 'UPDATE_KEY';\r\nexport const UPDATE_FAVORITES = 'UPDATE_FAVORITES';","export default __webpack_public_path__ + \"static/media/sunny.cf98dcc9.svg\";","export default __webpack_public_path__ + \"static/media/cloudy.9d434199.svg\";","export default __webpack_public_path__ + \"static/media/rain.ec9a02b0.svg\";","import sunny from './images/sunny.svg';\nimport cloudy from './images/cloudy.svg';\nimport rainny from './images/rain.svg';\n\nexport const ACCU_WEATHER_HOST = 'https://dataservice.accuweather.com';\n// export const API_KEY = 'ALY2AtsDuGp5HjSxZkHRZsfOiWmAtVco';\n// export const API_KEY = 'GU2OTPQUz1mECqPOZOVdshtwt64h4pD5';\nexport const API_KEY = 'OjjecWaBfDrQauHwSlDuGTKjwZLZCXm6';\n\nexport const weekDayConvertor = new Array(7);\nweekDayConvertor[0] = \"Sunday\";\nweekDayConvertor[1] = \"Monday\";\nweekDayConvertor[2] = \"Tuesday\";\nweekDayConvertor[3] = \"Wednesday\";\nweekDayConvertor[4] = \"Thursday\";\nweekDayConvertor[5] = \"Friday\";\nweekDayConvertor[6] = \"Saturday\";\n\nexport const debounce = (func, wait, immediate) => {\n\tlet timeout;\n\n\treturn function () {\n\n\t\tlet context = this,\n\t\t\targs = arguments;\n\t\tlet later = function () {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tlet callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};\n\nexport const ID = () => {\n\tvar dt = new Date().getTime();\n\tvar uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n\t\tvar r = (dt + Math.random() * 16) % 16 | 0;\n\t\tdt = Math.floor(dt / 16);\n\t\treturn (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n\t});\n\treturn uuid;\n}\n\nexport const cToF = (celsius) => {\n\tvar cTemp = celsius;\n\tvar cToFahr = cTemp * 9 / 5 + 32;\n\treturn cToFahr\n}\n\nexport const checkForMatch = (array, obj) => {\n\t// let bool = array.isArray(obj)\n\t// return bool\n}\n\nexport const containsObject = (list, obj) => {\n\tvar i;\n\tfor (i = 0; i < list.length; i++) {\n\t\tif (list[i].key === obj.key) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport const imageDispenser = (string) => {\n\n\ttry {\n\t\tswitch (true) {\n\n\t\t\tcase string.toLowerCase().includes('sun'):\n\t\t\t\treturn sunny\n\t\t\tcase string.toLowerCase().includes('rain'):\n\t\t\t\treturn rainny\n\t\t\tcase string.toLowerCase().includes('clear'):\n\t\t\t\treturn sunny\n\t\t\tdefault:\n\t\t\t\treturn cloudy\n\t\t}\n\t} catch {\n\t\treturn cloudy\n\t}\n\n}","import * as actionTypes from './action';\nimport * as utils from '../utils'\n\nconst initialState = {\n    key: null,\n    dark: false,\n    metric: true,\n    city: '',\n    current: null,\n    days: [],\n    celsius: false,\n    isFavorite: false,\n    fahrenheit: false,\n    tempFav: null,\n    favorites: localStorage.getItem('favorites') === null ? [] : JSON.parse(localStorage.getItem('favorites')),\n    lat: null,\n    lan: null\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_THEME:\n            return {\n                ...state,\n                dark: state.dark ? false : true\n            }\n        case actionTypes.UPDATE_CITY:\n            console.log(action.value);\n            return {\n                ...state,\n                city: action.value,\n            }\n        case actionTypes.UPDATE_TEMPERATURE:\n            console.log(action);\n            return {\n                ...state,\n                celsius: action.celsius,\n                fahrenheit: action.fahrenheit\n            }\n        case actionTypes.UPDATE_CURRENT:\n\n            return {\n                ...state,\n                current: action.value\n            }\n        case actionTypes.TOGGLE_METRIC:\n            return {\n                ...state,\n                metric: state.metric ? false : true\n            }\n        case actionTypes.UPDATE_DAYS:\n            return {\n                ...state,\n                days: action.value\n\n            }\n        case actionTypes.UPDATE_KEY:\n            let boolKey = utils.containsObject(state.favorites, { key: action.key, city: action.city });\n            return {\n                ...state,\n                key: action.key,\n                city: action.city,\n                isFavorite: boolKey ? true : false\n\n            }\n        case actionTypes.UPDATE_FAVORITES:\n            let boolFav = utils.containsObject(state.favorites, { key: state.key, city: state.city });\n            let favorites = state.favorites;\n\n            if (!boolFav) {\n                localStorage.setItem('favorites',JSON.stringify([...state.favorites, { key: state.key, city: state.city }]));\n                return {\n                    ...state,\n                    favorites: [...state.favorites, { key: state.key, city: state.city }],\n                    isFavorite: boolFav ? false : true\n                }\n            } else {\n                localStorage.setItem('favorites',JSON.stringify(favorites.splice(favorites.indexOf({ key: state.key, city: state.city }), 1)));\n                return {\n                    ...state,\n                    favorites: favorites.splice(favorites.indexOf({ key: state.key, city: state.city }), 1),\n                    isFavorite: boolFav ? false : true\n                }\n\n            }\n\n        default:\n            return state\n    }\n\n\n}\n\nexport default reducer","import React from 'react'\nimport './navbar.css';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as action from '../../store/action'\n\n\n\nconst IOSSwitch = withStyles((theme) => ({\n    root: {\n      width: 42,\n      height: 26,\n      padding: 0,\n      margin: theme.spacing(1),\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: 'translateX(16px)',\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#ffffff',\n          opacity: 1,\n          border: 'none',\n        },\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff',\n      },\n    },\n    thumb: {\n      width: 24,\n      height: 24,\n    },\n    track: {\n      borderRadius: 26 / 2,\n      border: `1px solid ${theme.palette.grey[400]}`,\n      backgroundColor: '#242132',\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n  }))(({ classes, ...props }) => {\n    return (\n      <Switch\n        focusVisibleClassName={classes.focusVisible}\n        disableRipple\n        classes={{\n          root: classes.root,\n          switchBase: classes.switchBase,\n          thumb: classes.thumb,\n          track: classes.track,\n          checked: classes.checked,\n        }}\n        {...props}\n      />\n    );\n  });\n\n\n\n\nexport default function NavBar() {\n    const dark = useSelector(state => state.dark);\n    const dispatch = useDispatch();\n\n    const handleChange = () => {\n        dispatch({type: action.TOGGLE_THEME})\n    }\n    const style = {\n        color: dark ? '#ffffff' : '#000000',\n        borderBottom: dark ? 'solid 2px #ffffff' : 'solid 2px #000000'\n    }\n    return (\n        <div style={style} className=\"navbar\">\n            <h1>\n                Herolo <span>(is now abra)</span><br></br> Weather App\n            </h1><div>\n            <FormControlLabel\n        control={<IOSSwitch checked={dark} onChange={handleChange} name=\"checkedB\" label={'dark'}/>}\n      />\n      {dark ? 'dark mode':'light mode'}\n            </div>\n\n            <ButtonGroup size=\"lg\" className=\"mb-2\">\n                <Link to=\"/home\"><Button variant={dark ?  \"outline-light\" : \"outline-dark\"}>Home</Button></Link>\n                <Link to=\"/favorites\"><Button variant={dark ?  \"outline-light\" : \"outline-dark\"}>Favorites</Button></Link>\n            </ButtonGroup>\n\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport {useDispatch } from 'react-redux';\nimport * as action from '../../../store/action';\nimport * as utils from '../../../utils';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\n\nexport default function SearchBar() {\n  const dispatch = useDispatch();\n  const initialValue = []\n  const [cities, setCities] = useState(initialValue);\n  const errorId = utils.ID();\n\n\n  const notify = () => toast.error(\"Network Error\", {\n    toastId: errorId\n  });\n\n  useEffect(()=>{\n    citySelection({key: '215854', value: 'Tel Aviv'})\n  },[]);\n  \n const getCities = (q)  => {\n  if (q === '' || q === null) {\n    return\n  }\n  fetch(`${utils.ACCU_WEATHER_HOST}/locations/v1/cities/autocomplete?apikey=${utils.API_KEY}&q=${q}&language=en`)\n  .then(res => res.json())\n  .then((data) => {\n    console.log(data);\n    let temp = data.map(\n      item =>{\n        return {value: item.AdministrativeArea.LocalizedName, label: item.AdministrativeArea.LocalizedName, key: item.Key}\n      }\n    )\n    console.log(temp);\n    setCities(temp);\n    console.log(cities)\n  })\n  .catch(notify)\n }\n\n  const makeDayArray = (array) => {\n    let days = array.map(day => {\n      let weekday = new Date(day.Date)\n      return {\n        weekday: utils.weekDayConvertor[weekday.getDay()],\n        celsius: Math.ceil(day.Temperature.Maximum.Value) ,\n        fahrenheit: utils.cToF(Math.ceil(day.Temperature.Maximum.Value)),\n        condition: day.Day.IconPhrase\n      }\n    });\n    \n    return days\n  }\n\n  const citySelection = async (item) => {\n    dispatch({type: action.UPDATE_KEY, key: item.key, city: item.value});\n    console.log(item.key);\n\n    try {\n      const response = await axios.get(`${utils.ACCU_WEATHER_HOST}/currentconditions/v1/${item.key}?apikey=${utils.API_KEY}&language=en&details=true`)\n      dispatch({type: action.UPDATE_TEMPERATURE, celsius: response.data[0].Temperature.Metric.Value,fahrenheit: response.data[0].Temperature.Imperial.Value});\n      dispatch({type: action.UPDATE_CURRENT, value: response.data[0].WeatherText});\n    } catch (error) {\n      console.log(error);\n      notify();\n    }\n\n    try {\n      const response2 = await axios.get(`${utils.ACCU_WEATHER_HOST}/forecasts/v1/daily/5day/${item.key}?apikey=${utils.API_KEY}&language=en&details=true&metric=true`)\n      console.log(response2);\n      dispatch({type: action.UPDATE_DAYS, value: makeDayArray(response2.data.DailyForecasts)}) \n    } catch (error) {\n      notify()\n      console.log(error);\n    }\n  }\n\n\n\n  const handleInput = utils.debounce((q) => {\n    getCities(q);\n  },500)\n\n\n  const handleChange = async (item) => {\n    citySelection(item);\n  }\n\n  return (\n    <div className=\"search-bar\">\n    <Select\n      onChange={handleChange}\n      onInputChange={handleInput}\n      options={cities} />\n    <ToastContainer />\n    </div>\n\n  );\n}\n\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as action from '../../../../store/action';\nimport * as Icon from 'react-bootstrap-icons';\nimport * as utils from '../../../../utils';\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#242132',\n        opacity: 1,\n        border: `1px solid ${theme.palette.grey[400]}`,\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: '#242132',\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\n\nexport default function Dashboard(props) {\n  const dispatch = useDispatch();\n  const isFavorite = useSelector(state => state.isFavorite);\n\n  const handleChange = () => {\n    dispatch({ type: action.TOGGLE_METRIC })\n  }\n  const handleClick = () => {\n    dispatch({ type: action.UPDATE_FAVORITES })\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"weather-widget\">\n        <img alt=\"weather_img\" src={utils.imageDispenser(props.current)}>\n        </img>\n        <div style={{ color: props.dark ? '#ffffff' : '#000000' }}>\n          <p>{props.location}</p>\n          <p>{props.degrees}</p>\n\n        </div>\n      </div>\n      <div >\n        <FormControlLabel\n          control={<IOSSwitch checked={props.metric} name=\"checkedB\" onChange={handleChange} label={'dark'} />}\n\n        />\n          <h3>{props.metric ? 'Celcius' : 'Fahrenheit'}</h3>\n      </div>\n\n\n        {\n          isFavorite ? <Icon.HeartFill onClick={() => handleClick()} className=\"favorites-icon\" style={{ color: '#fe0000' }} /> : <Icon.Heart onClick={() => handleClick()} className=\"favorites-icon\" style={{ color: props.dark ? '#ffffff' : '#000000' }} />\n        }\n\n\n      </div>\n      )\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as utils from '../../../../utils'\r\n\r\nexport default function DayCard(props) {\r\n    const metric = useSelector(state => state.metric);\r\n    return (\r\n        <div className=\"day-card\">\r\n            <h1>{props.day}</h1>\r\n            <img src={utils.imageDispenser(props.condition)} alt=\"weather_image\"/>\r\n            <h2>{metric ? `${props.celsius}°c` : `${props.fahrenheit}°F`}</h2>\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Dashboard from './Dashboard/DashBoard'\nimport DayCard from './dayCard/DayCard'\n\nexport default function MainContainer() {\n    const dark = useSelector(state => state.dark);\n    const location = useSelector(state => state.city);\n    const celsius = useSelector(state => state.celsius);\n    const fahrenheit = useSelector(state => state.fahrenheit);\n    const metric = useSelector(state => state.metric);\n    const current = useSelector(state => state.current);\n    const days = useSelector(state => state.days);\n    const key = useSelector(state => state.key);\n\n    const dayCardArray = days.map((day,index) => <DayCard key={`card_${index}`} day={day.weekday} celsius={day.celsius} fahrenheit={day.fahrenheit} condition={day.condition}/>);\n    return (\n        <div style={{background: dark ? '#2D2C41': 'rgba(255, 255, 255, 0.2)', color: dark ? '#ffffff' : '#000000',}} className='main-container'>\n            <Dashboard \n            location={location}\n            degrees={metric ? `${celsius}°c`:`${fahrenheit}°F`}\n            dark={dark}\n            metric={metric}\n            key={key}\n            current={current}\n            />\n            <h1>{current}</h1>\n            <div className=\"forecast-div\">\n                {dayCardArray}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport SearchBar from './SearchBar/SearchBar';\nimport MainContainer from './MainContainer/MainContainer';\nimport './home.css'\n\n\n\nexport default function Home() {\n    return (\n        <Route exec path=\"/\" >\n        <div className='home'>\n            <SearchBar />\n            <MainContainer />\n        </div>\n        </Route>\n    )\n}","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as utils from '../../../utils';\r\nimport axios from 'axios';\r\n\r\nexport default function FavoriteCard(props) {\r\n    const dark = useSelector(state => state.dark);\r\n    const metric = useSelector(state => state.metric);\r\n    const [celsius, setCel] = useState('');\r\n    const [fahrenheit, setFar] = useState('');\r\n    const [condition, setCon] = useState('');\r\n\r\n    async function getCity() {\r\n        try {\r\n            const response = await axios.get(`${utils.ACCU_WEATHER_HOST}/currentconditions/v1/${props.id}?apikey=${utils.API_KEY}&language=en&details=true`);\r\n            setCel(response.data[0].Temperature.Metric.Value);\r\n            setFar(response.data[0].Temperature.Imperial.Value);\r\n            setCon(response.data[0].WeatherText);\r\n        } catch {\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCity();\r\n    return (\r\n    <div style={{background: dark ? '#2D2C41' : 'rgba(255, 255, 255, 0.2)',color: dark ? '#ffffff' : '#000000',}} className=\"favorite-card\" >\r\n        <h1> {props.city}<br></br> {metric ? `${celsius}°c` : `${fahrenheit}°f`}</h1>\r\n        <h2> {condition} </h2> <img src={utils.imageDispenser(condition)} alt=\"weather_image\" />\r\n    </div>\r\n    )\r\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport FavoriteCard from './FavoriteCard/FavoriteCard';\nimport './favorites.css'\nimport { useSelector } from 'react-redux';\n\n\nexport default function Favorites() {\n    const favorites = useSelector(state => state.favorites);\n\n    const cards = favorites.map(card => \n            <FavoriteCard city={card.city} id={card.key}/>\n    )\n\n    return (\n        <Route exec path=\"/favorites\" >\n        <div className=\"favorites\">\n            {cards}\n        </div>\n        </Route>\n\n    )\n}","\nimport './App.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport Home from './Components/Home/Home';\nimport Favorites from './Components/Favorites/Favorites';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n  const dark = useSelector(state => state.dark);\n  const style = {\n    background: dark ? '#242132' : 'linear-gradient(250.26deg, #75489A -9.91%, rgba(80, 195, 210, 0.47) 57.79%, rgba(117, 72, 154, 0.4) 110.89%)'\n  }\n  return (\n    <BrowserRouter>\n      <div className=\"App\" style={style}>\n        <NavBar />\n        <Route exact path=\"/Bar-Linder-12-08-2021\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/favorites\" component={Favorites} />\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore} from 'redux';\nimport { Provider} from 'react-redux';\nimport reducer from './store/reducer'\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}